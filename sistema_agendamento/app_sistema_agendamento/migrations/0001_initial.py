# Generated by Django 4.1.7 on 2025-05-21 22:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DisponibilidadeMedico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.CharField(choices=[('Segunda', 'Segunda'), ('Terça', 'Terça'), ('Quarta', 'Quarta'), ('Quinta', 'Quinta'), ('Sexta', 'Sexta'), ('Sábado', 'Sábado'), ('Domingo', 'Domingo')], max_length=10)),
                ('horario_inicio', models.TimeField()),
                ('horario_fim', models.TimeField()),
                ('duracao_consulta', models.IntegerField()),
                ('ativo', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='EspecialidadeConsulta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=100, null=True)),
                ('descricao', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EspecialidadeMedica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=100, null=True)),
                ('descricao', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=100, null=True)),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('cpf', models.CharField(blank=True, max_length=14, null=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('obs_medicas', models.TextField(blank=True, null=True)),
                ('bairro', models.CharField(max_length=30)),
                ('rua', models.CharField(max_length=30)),
                ('numero_residencia', models.IntegerField()),
                ('cep', models.CharField(max_length=8)),
                ('sexo', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='PlanoSaude',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profissional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=100, null=True)),
                ('sexo', models.CharField(blank=True, max_length=5, null=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('tempo_experiencia', models.TextField(blank=True, null=True)),
                ('nivel', models.CharField(blank=True, max_length=50, null=True)),
                ('instituicao_formacao', models.CharField(blank=True, max_length=100, null=True)),
                ('bairro', models.CharField(max_length=30)),
                ('rua', models.CharField(max_length=30)),
                ('numero_residencia', models.IntegerField()),
                ('cep', models.CharField(max_length=8)),
                ('cpf', models.CharField(max_length=20)),
                ('especialidade_medica', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_sistema_agendamento.especialidademedica')),
            ],
        ),
        migrations.CreateModel(
            name='HorarioDisponivel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_horario', models.DateTimeField()),
                ('disponivel', models.BooleanField(default=True)),
                ('bloqueado', models.BooleanField(default=False)),
                ('disponibilidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_sistema_agendamento.disponibilidademedico')),
            ],
        ),
        migrations.AddField(
            model_name='disponibilidademedico',
            name='profissional',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_sistema_agendamento.profissional'),
        ),
        migrations.CreateModel(
            name='Consulta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(blank=True, null=True)),
                ('horario_consulta', models.TimeField(blank=True, null=True)),
                ('duracao_estimada', models.IntegerField(blank=True, null=True)),
                ('duracao_final', models.IntegerField(blank=True, null=True)),
                ('situacao', models.CharField(blank=True, max_length=50, null=True)),
                ('pagamento', models.CharField(blank=True, max_length=50, null=True)),
                ('convenio', models.CharField(blank=True, max_length=100, null=True)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('prescricao', models.TextField(blank=True, null=True)),
                ('diagnostico', models.TextField(blank=True, null=True)),
                ('exames_solicitados', models.TextField(blank=True, null=True)),
                ('especialidade_consulta', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_sistema_agendamento.especialidadeconsulta')),
                ('horario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_sistema_agendamento.horariodisponivel')),
                ('paciente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_sistema_agendamento.paciente')),
                ('profissional', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_sistema_agendamento.profissional')),
            ],
        ),
        migrations.CreateModel(
            name='ProfissionalPlano',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plano', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_sistema_agendamento.planosaude')),
                ('profissional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_sistema_agendamento.profissional')),
            ],
            options={
                'unique_together': {('profissional', 'plano')},
            },
        ),
        migrations.CreateModel(
            name='PacientePlano',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validade', models.DateField(blank=True, null=True)),
                ('numero_registro', models.IntegerField()),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_sistema_agendamento.paciente')),
                ('plano', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_sistema_agendamento.planosaude')),
            ],
            options={
                'unique_together': {('paciente', 'plano')},
            },
        ),
    ]
